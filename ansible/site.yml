---

- hosts: all
  remote_user: ubuntu
  gather_facts: no
  become: yes
  become_user: root
  pre_tasks:
      - locale_gen: name=fr_FR.UTF-8 state=present
      - name: 'install python2'
        raw: apt-get -y install python-simplejson apt-transport-https ca-certificates python-pip
      - name: Install docker-py
        raw: pip install docker-py
  roles:
  - { role: docker }

- hosts: master
  remote_user: ubuntu
  tasks:
  - name: Create a consul container
    become: yes
    become_user: root
    docker_container:
      name: consul
      image: consul:v0.6.4
      command: [ "agent",  "-server" ,"-bind={{ private_ip }}","-client={{ private_ip }}" ,"-retry-join={{ hostvars[groups['master'][0]]['ansible_eth0']['ipv4']['address'] }}", "-bootstrap-expect=3" ]
      state: started
      network_mode: host
  - name: Create a swarm container
    become: yes
    become_user: root
    docker_container:
      name: swarm
      image: swarm
      command: ["manage" ,"-H", ":3375" , "--replication" , "--advertise",  "{{ private_ip }}:3375","consul://{{ private_ip }}:8500/nodes" ]
      state: started
      network_mode: host

- hosts: node
  vars_files:
    - variables.yml
  remote_user: ubuntu
  become: yes
  become_user: root
  tasks:
  - name: Create a swarm agent
    become: yes
    become_user: root
    docker_container:
      name: swarm-agent
      image: swarm
      command: ["join" , "--advertise",  "{{ private_ip }}:2375","consul://{{ hostvars[groups['master'][0]]['ansible_eth0']['ipv4']['address'] }}:8500/nodes" ]
      state: started
      network_mode: host
  - file: path="/etc/systemd/system/docker.service.d" state=directory
  - name: "Copy docker service conf"
    template: src=files/ubuntu.conf.j2 dest=/etc/systemd/system/docker.service.d/ubuntu.conf owner=root group=root mode=0644
    notify:
    - reload systemd
    - restart docker
  - name: Create an interlock proxy
    become: yes
    become_user: root
    docker_container:
      name: interlock
      image: "ehazlett/interlock:1.2.0"
      command: [ '-D' , 'run' , '-c' , '/etc/interlock/config.toml' ]
      env:
        INTERLOCK_CONFIG: |
            ListenAddr = ":8080"
            DockerURL = "{{ docker_endpoint }}"

            [[Extensions]]
            Name = "nginx"
            ConfigPath= "/etc/nginx/nginx.conf"
            PidPath = "/var/run/nginx.pid"
            TemplatePath = ""
            MaxConn = 1024
            Port = 80
      ports:
        - 8080
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock
      tty: yes
      state: started

  - name: Create an nginx container
    become: yes
    become_user: root
    docker_container:
      name: nginx
      image: nginx:latest
      entrypoint: ['nginx']
      command: ['-g', 'daemon off;', '-c', '/etc/nginx/nginx.conf']
      ports:
        - 80:80
      labels:
        "interlock.ext.name": nginx
      links:
        - interlock:interlock
      state: started

  handlers:
  - name: reload systemd
    command: systemctl daemon-reload
  - name: restart docker
    service: name=docker state=restarted